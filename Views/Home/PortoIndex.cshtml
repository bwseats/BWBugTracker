@model BWBugTracker.Models.ViewModels.DashboardViewModel

@using Microsoft.AspNetCore.Identity
@using BWBugTracker.Services.Interfaces
@using BWBugTracker.Models.Enums

@inject UserManager<BTUser> UserManager
@inject IBTRolesService _rolesService

@{
	ViewData["Title"] = "Dashboard";
	BTUser? btUser = await UserManager.GetUserAsync(User);
}

<!-- start: page -->
<header class="page-header">
	<h2>Dashboard</h2>
</header>

<div class="col-12">
	<div class="row mb-3">
		<div class="col-xl-3">
			<section class="card card-featured-left card-featured-primary mb-3">
				<div class="card-body">
					<div class="p-15 text-dark">
						<h3>@Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h3>
						<span>Active Projects</span>
					</div>
				</div>
			</section>
		</div>
		<div class="col-xl-3">
			<section class="card card-featured-left card-featured-secondary">
				<div class="card-body">
					<div class="p-15 text-dark">
						<h3>@Model.Tickets.Count()</h3>
						<span>Total Tickets</span>
					</div>
				</div>
			</section>
		</div>
		<div class="col-xl-3">
			<section class="card card-featured-left card-featured-tertiary mb-3">
				<div class="card-body">
					<div class="p-15 text-dark">
						<h3>@Model.Tickets.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()</h3>
						<span>Unassigned Tickets</span>
					</div>
				</div>
			</section>
		</div>
		<div class="col-xl-3">
			<section class="card card-featured-left card-featured-quaternary">
				<div class="card-body">
					<div class="p-15 text-dark">
						<h3>
							@(
								Model.Projects.Count()
								+ Model.Tickets.Count()
								+ Model.Members.Count()
								)
						</h3>
						<span>Total Data</span>
					</div>
				</div>
			</section>
		</div>
	</div>
</div>

<div class="row">
	<div class="col-xl-6">
		<section class="card">
			<header class="card-header card-header-transparent">
				<div class="card-actions">
					<a href="#" class="card-action card-action-toggle" data-card-toggle></a>
					<a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
				</div>

				<h2 class="card-title">Projects Stats</h2>
			</header>
			<div class="card-body">
				<table class="table table-responsive-md table-striped mb-0">
					<thead>
						<tr>
							<th>Project</th>
							<th>Status</th>
							<th>Progress</th>
						</tr>
					</thead>
					<tbody>
						@foreach (Project project in Model.Projects)
						{
							<tr>
								<td>@project.Name</td>
								<td><span class="badge badge-success">@project.ProjectPriority.Name</span></td>
								<td>
									<span>
										@{
											var start = project.StartDate;
											var end = project.EndDate;
											var today = DateTime.Now;
											var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
										}
										<span class="progress progress-sm progress-half-rounded m-0 mt-1 light"><span class="progress-value">@percent%</span></span>
									</span>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</section>
	</div>
	<div class="col-xl-3">
		<section class="card">
			<header class="card-header card-header-transparent">
				<div class="card-actions">
					<a href="#" class="card-action card-action-toggle" data-card-toggle></a>
					<a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
				</div>

				<h2 class="card-title">Project Priorities</h2>
			</header>
			<div class="card-body">
				<div id="chart3D"></div>
			</div>
		</section>
	</div>
	<div class="col-xl-3">
		<section class="card">
			<header class="card-header card-header-transparent">
				<div class="card-actions">
					<a href="#" class="card-action card-action-toggle" data-card-toggle></a>
					<a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
				</div>

				<h2 class="card-title">Ticket Distribution</h2>
			</header>
			<div class="card-body">
				<div id="donut"></div>
			</div>
		</section>
	</div>
</div>

<div class="row pt-4 mt-2">
	<div class="col-12">
		<section class="card">
			<header class="card-header card-header-transparent">
				<div class="card-actions">
					<a href="#" class="card-action card-action-toggle" data-card-toggle></a>
					<a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
				</div>

				<h2 class="card-title">My Projects</h2>
			</header>
			<div class="card-body">
				<div class="timeline timeline-simple mt-3 mb-3">
					<div class="tm-body">
						<ol class="tm-items">
							@foreach (Project project in btUser.Projects)
							{
								<li>
									<div class="tm-box">
										<p class="text-muted mb-0">@project.Created</p>
										<p>
											<h4>@project.Name<span class="text-primary"></span></h4>
											@project.Description<span class="text-primary"></span>
										</p>
									</div>
								</li>
							}
						</ol>
					</div>
				</div>
			</div>
		</section>
	</div>
</div>

<!-- end: page -->

@section scripts {
	<!--Google Charts-->
	<script type="text/javascript" src="https://www.google.com/jsapi"></script>

	<script type="text/javascript">
		google.load("visualization", "1", { packages: ["corechart"] });
		google.setOnLoadCallback(drawChart);
		function drawChart() {
			$.ajax({
				type: "POST",
				url: "/Home/ProjectPriorityChart",
				data: '{}',
				contentType: "application/json; charset=utf-8",
				dataType: "json",
				success: function (result) {
					var data = google.visualization.arrayToDataTable(result);

					//3D Pie
					var options = {
						title: 'Project Priority',
						is3D: true,
						chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
						legend: { position: 'bottom' }

					};

					var chart = new google.visualization.PieChart($("#chart3D")[0]);
					chart.draw(data, options);
				},
				failure: function (rresult) {
					alert(result.d);
				},
				error: function (result) {
					alert(result.d);
				}
			});
		}
	</script>

	<script type="text/javascript">
		google.load("visualization", "1", { packages: ["corechart"] });
		google.setOnLoadCallback(drawChart);
		function drawChart() {
			$.ajax({
				type: "POST",
				url: "/Home/ProjectTicketsChart",
				data: '{}',
				contentType: "application/json; charset=utf-8",
				dataType: "json",
				success: function (result) {
					var data = google.visualization.arrayToDataTable(result);

					//Donut
					var options = {
						title: 'Company Ticket Distribution',
						pieHole: 0.3,
						chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
						legend: { position: 'bottom' }
					};
					var chart = new google.visualization.PieChart($("#donut")[0]);
					chart.draw(data, options);
				},
				failure: function (rresult) {
					alert(result.d);
				},
				error: function (result) {
					alert(result.d);
				}
			});
		}
	</script>
}